trigger:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

pr:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

variables:
  BuildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
- job: Build
  pool:
    name: Dev16Custom
    demands: msbuild

  strategy:
    matrix:
      Channel_CD_Web:
        ChannelName: CD-Web
        DistributionUrl: https://build2019devopsdemo.z13.web.core.windows.net/CD
        MsixPackageId: WpfCoreApp.DevOpsDemo.CD
        MsixPublisherId: CN=build
        MsixPackageDisplayName: WpfCoreApp (CD)
        MsixBuildMode: SideLoadOnly
        MsixGenerateAppInstaller: true
      Channel_Prod_Web:
        ChannelName: Prod-Web
        DistributionUrl: https://build2019devopsdemo.z13.web.core.windows.net/Prod
        MsixPackageId: WpfCoreApp.DevOpsDemo
        MsixPublisherId: CN=build
        MsixPackageDisplayName: WpfCoreApp (Prod)
        MsixBuildMode: SideLoadOnly
        MsixGenerateAppInstaller: true
      Channel_Prod_Store:
        ChannelName: Prod-Store
        DistributionUrl: https://not/used
        MsixPackageId: Build.WpfCoreAppSample
        MsixPublisherId: CN=E40A5878-9BC7-45A3-BBFC-B988EA6795B5
        MsixPackageDisplayName: WpfCoreApp (Store)
        MsixBuildMode: CI
        MsixGenerateAppInstaller: false

  steps:
  - checkout: self
    clean: true

  - script: nbgv cloud -c
    displayName: Set Version

  - powershell: |
      # Update appxmanifest. This must be done before build.
      # Set the per-channel values into the appxmanifest, replacing the checked-in values
      [xml]$manifest= get-content ".\WpfCoreApp.Package\Package.appxmanifest"
      $manifest.Package.Identity.Version = "$(GitBuildVersionSimple).0"
      $manifest.Package.Identity.Name = "$(MsixPackageId)"
      $manifest.Package.Identity.Publisher = "$(MsixPublisherId)"
      $manifest.Package.Properties.DisplayName = "$(MsixPackageDisplayName)"
      $manifest.Package.Applications.Application.VisualElements.DisplayName = "$(MsixPackageDisplayName)"
      $manifest.save(".\WpfCoreApp.Package\Package.appxmanifest")

    displayName: Update manifest version

  - powershell: |
      # Update App Insights instrumentation key
      [xml]$doc = Get-Content ".\WpfCoreApp\ApplicationInsights.config"
      $doc.ApplicationInsights.InstrumentationKey = "$(AppInsightsKey)"
      $doc.save(".\WpfCoreApp\ApplicationInsights.config")

    displayName: Set AppInsights Config
    env:
      AppInsightsKey: $(AppInsightsKey)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['AppInsightsKey'], '')))

  - task: MSBuild@1
    displayName: Build for $(BuildConfiguration)
    inputs:
      solution: WpfCoreApp.sln
      platform: x86
      msbuildArguments: /restore /p:AppInstallerUri=$(DistributionUrl) /p:UapAppxPackageBuildMode=$(MsixBuildMode) /p:GenerateAppInstallerFile=$(MsixGenerateAppInstaller)
      configuration: $(BuildConfiguration)
      maximumCpuCount: false

  - script: copy build.cer WpfCoreApp.Package\AppPackages\WpfCoreApp.Package_$(GitBuildVersionSimple).0_x86_Test\WpfCoreApp.Package_$(GitBuildVersionSimple).0_x86.cer
    displayName: Copy Certificate to versioned dir
    condition: and(succeeded(), not(eq(variables['ChannelName'], 'Prod-Store')))

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: $(ChannelName)
      targetPath: WpfCoreApp.Package/AppPackages

